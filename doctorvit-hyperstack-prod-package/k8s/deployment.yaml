apiVersion: apps/v1
kind: Deployment
metadata:
  name: doctorvit-vllm
  namespace: doctorvit
  labels:
    app: doctorvit-vllm
spec:
  replicas: 3
  selector:
    matchLabels:
      app: doctorvit-vllm
  template:
    metadata:
      labels:
        app: doctorvit-vllm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: doctorvit-vllm
      containers:
        - name: vllm
          image: REPLACE_WITH_REGISTRY/doctorvit-vllm-h200:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: MODEL_S3_URI
              valueFrom:
                secretKeyRef:
                  name: doctorvit-s3
                  key: MODEL_S3_URI
            - name: MODEL_LOCAL_PATH
              valueFrom:
                secretKeyRef:
                  name: doctorvit-s3
                  key: MODEL_LOCAL_PATH
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: doctorvit-s3
                  key: AWS_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: doctorvit-s3
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: doctorvit-s3
                  key: AWS_SECRET_ACCESS_KEY
            - name: MAX_MODEL_LEN
              value: "2048"
            - name: MAX_NUM_SEQS
              value: "64"
            - name: MAX_BATCHED_TOKENS
              value: "4096"
            - name: DTYPE
              value: "bfloat16"
            - name: TRUST_REMOTE_CODE
              value: "true"
          volumeMounts:
            - name: models
              mountPath: /models
          resources:
            limits:
              nvidia.com/gpu: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 3
            failureThreshold: 5
      volumes:
        - name: models
          emptyDir: {}
